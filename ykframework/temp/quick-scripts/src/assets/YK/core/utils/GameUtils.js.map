{"version":3,"sources":["assets\\YK\\core\\utils\\GameUtils.ts"],"names":[],"mappings":";;;;;AAAA;IAAA;IA2BA,CAAC;IAzBG,OAAO;IACA,eAAK,GAAZ,UAAa,EAAE,EAAE,EAAE;QAEf,IAAI,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QACvD,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,IAAI,GAAG,EAAE,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;QAClC,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;QAE/C,OAAO,QAAQ,CAAC;IACpB,CAAC;IAGa,eAAK,GAAnB,UAAoB,KAAa,EAAE,GAAW,EAAE,GAAW;QACvD,IAAI,KAAK,GAAG,GAAG;YACX,KAAK,GAAG,GAAG,CAAC;aACX,IAAI,KAAK,GAAG,GAAG;YAChB,KAAK,GAAG,GAAG,CAAC;QAChB,OAAO,KAAK,CAAC;IACjB,CAAC;IAEa,gBAAM,GAApB,UAAqB,CAAC,EAAE,CAAC;QACrB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAClD,OAAO,GAAG,CAAC;IACf,CAAC;IACL,gBAAC;AAAD,CA3BA,AA2BC,IAAA;AA3BY,8BAAS","file":"","sourceRoot":"/","sourcesContent":["export class GameUtils {\r\n\r\n    // 向量夹角\r\n    static Angle(ma, mb) {\r\n\r\n        let v1 = (ma.x * mb.x) + (ma.y * mb.y) + (ma.z * mb.z);\r\n        let ma_val = Math.sqrt(ma.x * ma.x + ma.y * ma.y + ma.z * ma.z);\r\n        let mb_val = Math.sqrt(mb.x * mb.x + mb.y * mb.y + mb.z * mb.z);\r\n        let cosM = v1 / (ma_val * mb_val);\r\n        let angleAMB = Math.acos(cosM) * 180 / Math.PI;\r\n\r\n        return angleAMB;\r\n    }\r\n\r\n\r\n    public static clamp(value: number, min: number, max: number): number {\r\n        if (value < min)\r\n            value = min;\r\n        else if (value > max)\r\n            value = max;\r\n        return value;\r\n    }\r\n\r\n    public static random(m, n): number {\r\n        let num = Math.floor(Math.random() * (m - n) + n);\r\n        return num;\r\n    }\r\n}\r\n"]}