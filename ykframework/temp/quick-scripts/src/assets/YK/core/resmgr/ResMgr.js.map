{"version":3,"sources":["assets\\YK\\core\\resmgr\\ResMgr.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Func } from \"../utils/Listener\";\r\n\r\nclass ResInfo {\r\n    public url: string;\r\n    public type: string;\r\n    public isKeepMemory = false;\r\n}\r\n\r\ntype resDicType = { [key: string]: ResInfo }\r\n\r\nexport class LoadGroup {\r\n    public Progress: number = 0;\r\n    public needLoad: Array<ResInfo> = new Array<ResInfo>();\r\n\r\n    public add(url: string, type?: string, isKeepMemory = true) {\r\n        let index = this.needLoad.findIndex((value: ResInfo, index: number, obj: Array<ResInfo>) => {\r\n            return value.url == url\r\n        });\r\n        if (index == -1) {\r\n            let info = new ResInfo();\r\n            info.isKeepMemory = isKeepMemory;\r\n            info.url = url;\r\n            info.type = type;\r\n            this.needLoad.push(info)\r\n        }\r\n        return this\r\n    }\r\n\r\n    public onCompletion(callback: Function, thisObjs: any) {\r\n        this.finish = new Func(callback, thisObjs);\r\n        return this\r\n    }\r\n\r\n    public onItemCompletion(callback: Function, thisObjs: any) {\r\n        this.loadItem = new Func(callback, thisObjs);\r\n        return this\r\n    }\r\n\r\n\r\n    public start() {\r\n        ResMgr.instance.loadGroup(this)\r\n    }\r\n\r\n    public loadItem: Func;\r\n    public finish: Func;\r\n}\r\n\r\nexport class ResMgr {\r\n    constructor() {\r\n        if (ResMgr.mInstance == null) ResMgr.mInstance = this\r\n    }\r\n\r\n    private mOldRes: Array<string> = new Array<string>();\r\n    private resDic: Map<string, ResInfo> = new Map<string, ResInfo>();\r\n    private static mInstance: ResMgr = null;\r\n\r\n    public static get instance(): ResMgr {\r\n        if (this.mInstance == null) new ResMgr();\r\n        return this.mInstance\r\n    }\r\n\r\n    public getRes(url) {\r\n        return cc.loader.getRes(url)\r\n    }\r\n\r\n    public loadGroup(loads: LoadGroup) {\r\n\r\n        let urls: Array<any> = new Array<any>();\r\n        loads.needLoad.forEach(element => {\r\n            //urls.push({ url: element.url, type: element.type })\r\n            urls.push(element.url)\r\n        });\r\n        console.log(\"urls=\",urls)\r\n        cc.loader.loadResArray(urls, (completedCount: number, totalCount: number, item: cc.Asset) => {\r\n            loads.Progress = completedCount / totalCount * 100\r\n            if (loads.loadItem != null) {\r\n                loads.loadItem.run([loads.Progress])\r\n            }\r\n        }, ((error: Error, resource: any[]) => {\r\n            if (error == null) {\r\n                for (let index = 0; index < resource.length; index++) {\r\n                    let element = resource[index];\r\n                    let info = loads.needLoad[index]\r\n                    //info.asset = element\r\n                    // if (info.isFGUIPack) {\r\n                    //     console.log(\"info.fullUrl=\" + info.fullUrl)\r\n                    //     fgui.UIPackage.addPackage(info.fullUrl)\r\n                    // }\r\n                    if (!this.resDic.has(info.url)) {\r\n                        this.resDic.set(info.url, info)\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                console.error(error)\r\n            }\r\n            if (loads.finish != null) {\r\n                loads.finish.run()\r\n            }\r\n        }))\r\n    }\r\n\r\n    public load(url: any, callback: Function, thisObjs: any) {\r\n        let completeCall = new Func(callback, thisObjs);\r\n        let u: any = {};\r\n        let loadInfo: ResInfo = new ResInfo();\r\n        if (typeof (url) == \"string\") {\r\n            loadInfo.url = url;\r\n            loadInfo.isKeepMemory = true;\r\n            u = url;\r\n        } else {\r\n            loadInfo = u;\r\n            u.type = url.type;\r\n            u.url = url.url;\r\n        }\r\n        cc.loader.loadRes(url, (error: Error, resource: any) => {\r\n            if (error == null) {\r\n                if (!this.resDic.has(loadInfo.url)) {\r\n                    this.resDic.set(loadInfo.url, loadInfo)\r\n                }\r\n                if (completeCall != null) {\r\n                    completeCall.run();\r\n                }\r\n            } else {\r\n                console.error(error)\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 释放资源\r\n     * @param forced 是否强制释放所有\r\n     */\r\n    public pop(forced = false) {\r\n        if (forced) {\r\n            this.mOldRes.splice(0, this.mOldRes.length);\r\n\r\n            this.resDic.forEach((v: ResInfo, key: string) => {\r\n                this.mOldRes.push(key)\r\n            });\r\n        }\r\n        while (this.mOldRes.length > 0) {\r\n            let url = this.mOldRes.pop();\r\n            let info = this.resDic.get(url);\r\n            if (info != null) {\r\n                this.resDic.delete(info.url)\r\n            }\r\n            cc.loader.release(url)\r\n        }\r\n\r\n        if (forced) {\r\n            this.resDic.clear();\r\n            //释放未完成\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 压入要释放的资源\r\n     */\r\n    public push() {\r\n        this.resDic.forEach((v: ResInfo, key: string) => {\r\n            if (!v.isKeepMemory)\r\n                this.mOldRes.push(key)\r\n        });\r\n    }\r\n}"]}